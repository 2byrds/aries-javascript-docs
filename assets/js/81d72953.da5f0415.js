"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[145],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var i=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=i.createContext({}),s=function(e){var t=i.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=s(e.components);return i.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=s(n),d=a,f=m["".concat(p,".").concat(d)]||m[d]||c[d]||r;return n?i.createElement(f,o(o({ref:t},u),{},{components:n})):i.createElement(f,o({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<r;s++)o[s]=n[s];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7945:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return p},default:function(){return d},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return c}});var i=n(7462),a=n(3366),r=(n(7294),n(3905)),o=["components"],l={},p="Agent Config",s={unversionedId:"tutorials/agent-config",id:"tutorials/agent-config",title:"Agent Config",description:"temp file to keep the config, but not have it inside the agent-setup (we can",source:"@site/guides/tutorials/agent-config.md",sourceDirName:"tutorials",slug:"/tutorials/agent-config",permalink:"/aries-javascript-docs/guides/tutorials/agent-config",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Tutorials",permalink:"/aries-javascript-docs/guides/tutorials/"},next:{title:"The Aries JavaScript Ecosystem",permalink:"/aries-javascript-docs/guides/ecosystem/"}},u={},c=[],m={toc:c};function d(e){var t=e.components,n=(0,a.Z)(e,o);return(0,r.kt)("wrapper",(0,i.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"agent-config"},"Agent Config"),(0,r.kt)("p",null,"temp file to keep the config, but not have it inside the ",(0,r.kt)("inlineCode",{parentName:"p"},"agent-setup")," (we can\nmove this somewhere else, I just did not know where right now)"),(0,r.kt)("p",null,"The Aries agent provided by ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/hyperledger/aries-framework-javascript"},"Aries Framework\nJavaScript")," is very\nextensible. These are all the configuration options with a short description\n(",(0,r.kt)("strong",{parentName:"p"},"bold")," is required):"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"label")),": The label as seen by other users when creating a connection"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"walletConfig"),": configuration for the setup of the wallet. Including this\nmakes sure the wallet is initialized when initializing the agent.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"id")),": identifier string"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"key")),": TODO"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"keyDerivationMethod"),": What method to use for wallet key derivation",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"KeyDerivationMethod.Argon2IMod"),": Uses the argon2i modular"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"KeyDerivationMethod.Argon2Int"),": Uses argon2i int, less secure but faster"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"KeyDerivationMethod.Raw"),": Skip the derivation"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"storage"),": TODO",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"type"),": storage type"),(0,r.kt)("li",{parentName:"ul"},"TODO: what is ","[key: string]",": unknown here"))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"endpoint"),": The endpoint (schema + host + port) used for invitations"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"publicDidSeed"),": The seed used for initializing the public DID of the agent.\nThis does not register the DID on the ledger."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"indyLedgers"),": An array of indy ledgers to connect to. The list can contain\nthe following object (it must include either the ",(0,r.kt)("inlineCode",{parentName:"li"},"genesisPath")," or\n",(0,r.kt)("inlineCode",{parentName:"li"},"genesisTransaction"),"):",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"id")),": identifier of the ledger"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"strong"},"isProduction")),": Whether the ledger is a production ledger"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"genesisPath"),": filesystem path of the genesis transaction"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"genesisTransaction"),": stringified JSON object of the transaction"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"logger"),": A logger instance that implements the ",(0,r.kt)("inlineCode",{parentName:"li"},"Logger")," interface"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"didCommMimeType"),": The mime-type used for sending and receiving messages",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DidCommMimeType.v0"),': "application/ssi-agent-wire"'),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"DidCommMimeType.v1"),': "application/didcomm-envelope-enc"'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"autoAcceptMediationRequests"),": As a mediator, whether to automatically accept\nmediation requests. If disabled, the request should be manually accepted via\nthe ",(0,r.kt)("inlineCode",{parentName:"li"},"mediatorModule")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"mediationConnectionsInvitation"),": Connection invitation used for the default\nmediator. If specified, the agent will; create a connection, request\nmediation and store the mediator as the default for all connections."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"defaultMediatorId"),": The mediator id used as the default mediator. This will\noverride the default mediator."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"clearDefaultMediator"),": Whether to clear the default mediator"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"autoAcceptConnections"),": Whether to auto accept connections"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"autoAcceptCredentials"),": Whether to accept the incoming credentials",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"AutoAcceptCredential.always"),": Always auto accept the credential no matter\nthe changes during the entire flow"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"AutoAcceptCredential.contentApproved"),": If no content changes one manual\nstep is required, the rest is automated"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"AutoAcceptCredential.Never"),": Never auto accept a credential"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"autoAcceptProofs"),": Whether to auto accept all incoming proof requests:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"AutoAcceptProof.always"),": Always auto accept the proof requqest or proposal\nno matter the changes during the entire flow"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"AutoAcceptProof.contentApproved"),": If no content changes one manual step is\nrequired, the rest is automated"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"AutoAcceptProof.Never"),": Never auto accept a proof request of proposal")))),(0,r.kt)("p",null,"This can be quite daunting at first, but for most of these options, the default\nwhat you want."))}d.isMDXComponent=!0}}]);